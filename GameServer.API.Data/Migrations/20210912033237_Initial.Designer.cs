// <auto-generated />
using System;
using GameServer.API.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameServer.API.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210912033237_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameServer.API.Domain.Entities.Server", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasDisease")
                        .HasColumnType("bit");

                    b.Property<int>("InitialMoney")
                        .HasColumnType("int");

                    b.Property<int>("InitialStatsPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Shared")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("GameServer.API.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.Property<Guid?>("ServerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ServerId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a27c9cde-e512-4432-9086-1362470c24cd"),
                            CreatedAt = new DateTime(2021, 9, 12, 3, 32, 36, 856, DateTimeKind.Utc).AddTicks(713),
                            Email = "admin@admin.com",
                            Name = "Administrador",
                            Password = "12345678",
                            Permission = 2,
                            UpdatedAt = new DateTime(2021, 9, 12, 3, 32, 36, 856, DateTimeKind.Utc).AddTicks(2240)
                        });
                });

            modelBuilder.Entity("GameServer.API.Domain.Entities.User", b =>
                {
                    b.HasOne("GameServer.API.Domain.Entities.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId");

                    b.Navigation("Server");
                });
#pragma warning restore 612, 618
        }
    }
}
